"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/css-selector-parser";
exports.ids = ["vendor-chunks/css-selector-parser"];
exports.modules = {

/***/ "(ssr)/./node_modules/css-selector-parser/dist/mjs/ast.js":
/*!**********************************************************!*\
  !*** ./node_modules/css-selector-parser/dist/mjs/ast.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ast: () => (/* binding */ ast)\n/* harmony export */ });\nvar __assign = (undefined && undefined.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nfunction astMethods(type) {\n    return function (generatorName, checkerName) {\n        var _a;\n        return (_a = {},\n            _a[generatorName] = function (props) { return (__assign({ type: type }, props)); },\n            _a[checkerName] = function (entity) {\n                return typeof entity === 'object' && entity !== null && entity.type === type;\n            },\n            _a);\n    };\n}\n/**\n * AST structure generators and matchers.\n * For instance, `ast.selector({rules: [...]})` creates AstSelector and `ast.isSelector(...)` checks if\n * AstSelector was specified.\n *\n * @example\n *\n * // Represents CSS selector: ns|div#user-34.user.user-active[role=\"button\"]:lang(en)::before > *\n * const selector = ast.selector({\n *     rules: [\n *         ast.rule({\n *             items: [\n *                 ast.tagName({name: 'div', namespace: ast.namespaceName({name: 'ns'})}),\n *                 ast.id({name: 'user-34'}),\n *                 ast.className({name: 'user'}),\n *                 ast.className({name: 'user-active'}),\n *                 ast.attribute({\n *                     name: 'role',\n *                     operator: '=',\n *                     value: ast.string({value: 'button'})\n *                 }),\n *                 ast.pseudoClass({\n *                     name: 'lang',\n *                     argument: ast.string({value: 'en'})\n *                 }),\n *                 ast.pseudoElement({name: 'before'})\n *             ],\n *             nestedRule: ast.rule({combinator: '>', items: [ast.wildcardTag()]})\n *         })\n *     ]\n * });\n * console.log(ast.isSelector(selector)); // prints true\n * console.log(ast.isRule(selector)); // prints false\n */\nvar ast = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, astMethods('Selector')('selector', 'isSelector')), astMethods('Rule')('rule', 'isRule')), astMethods('TagName')('tagName', 'isTagName')), astMethods('Id')('id', 'isId')), astMethods('ClassName')('className', 'isClassName')), astMethods('WildcardTag')('wildcardTag', 'isWildcardTag')), astMethods('NamespaceName')('namespaceName', 'isNamespaceName')), astMethods('WildcardNamespace')('wildcardNamespace', 'isWildcardNamespace')), astMethods('NoNamespace')('noNamespace', 'isNoNamespace')), astMethods('Attribute')('attribute', 'isAttribute')), astMethods('PseudoClass')('pseudoClass', 'isPseudoClass')), astMethods('PseudoElement')('pseudoElement', 'isPseudoElement')), astMethods('String')('string', 'isString')), astMethods('Formula')('formula', 'isFormula')), astMethods('FormulaOfSelector')('formulaOfSelector', 'isFormulaOfSelector')), astMethods('Substitution')('substitution', 'isSubstitution'));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY3NzLXNlbGVjdG9yLXBhcnNlci9kaXN0L21qcy9hc3QuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGdCQUFnQixTQUFJLElBQUksU0FBSTtBQUM1QjtBQUNBLGlEQUFpRCxPQUFPO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkIsbURBQW1ELG1CQUFtQixZQUFZLFlBQVk7QUFDOUY7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLGFBQWE7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLDJDQUEyQyxXQUFXLEVBQUU7QUFDeEYsMkJBQTJCLGdCQUFnQjtBQUMzQyxrQ0FBa0MsYUFBYTtBQUMvQyxrQ0FBa0Msb0JBQW9CO0FBQ3REO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQyxnQkFBZ0I7QUFDMUQsb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQSw2Q0FBNkMsWUFBWTtBQUN6RCxvQkFBb0I7QUFDcEIsc0NBQXNDLGVBQWU7QUFDckQ7QUFDQSxxQ0FBcUMsNENBQTRDO0FBQ2pGLFlBQVk7QUFDWjtBQUNBLElBQUk7QUFDSiwwQ0FBMEM7QUFDMUMsc0NBQXNDO0FBQ3RDO0FBQ08sNEpBQTRKIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEFDRVJcXERlc2t0b3BcXFRhbGVudCBUcmFja2VyXFxub2RlX21vZHVsZXNcXGNzcy1zZWxlY3Rvci1wYXJzZXJcXGRpc3RcXG1qc1xcYXN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG5mdW5jdGlvbiBhc3RNZXRob2RzKHR5cGUpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGdlbmVyYXRvck5hbWUsIGNoZWNrZXJOYW1lKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgcmV0dXJuIChfYSA9IHt9LFxuICAgICAgICAgICAgX2FbZ2VuZXJhdG9yTmFtZV0gPSBmdW5jdGlvbiAocHJvcHMpIHsgcmV0dXJuIChfX2Fzc2lnbih7IHR5cGU6IHR5cGUgfSwgcHJvcHMpKTsgfSxcbiAgICAgICAgICAgIF9hW2NoZWNrZXJOYW1lXSA9IGZ1bmN0aW9uIChlbnRpdHkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHlwZW9mIGVudGl0eSA9PT0gJ29iamVjdCcgJiYgZW50aXR5ICE9PSBudWxsICYmIGVudGl0eS50eXBlID09PSB0eXBlO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF9hKTtcbiAgICB9O1xufVxuLyoqXG4gKiBBU1Qgc3RydWN0dXJlIGdlbmVyYXRvcnMgYW5kIG1hdGNoZXJzLlxuICogRm9yIGluc3RhbmNlLCBgYXN0LnNlbGVjdG9yKHtydWxlczogWy4uLl19KWAgY3JlYXRlcyBBc3RTZWxlY3RvciBhbmQgYGFzdC5pc1NlbGVjdG9yKC4uLilgIGNoZWNrcyBpZlxuICogQXN0U2VsZWN0b3Igd2FzIHNwZWNpZmllZC5cbiAqXG4gKiBAZXhhbXBsZVxuICpcbiAqIC8vIFJlcHJlc2VudHMgQ1NTIHNlbGVjdG9yOiBuc3xkaXYjdXNlci0zNC51c2VyLnVzZXItYWN0aXZlW3JvbGU9XCJidXR0b25cIl06bGFuZyhlbik6OmJlZm9yZSA+ICpcbiAqIGNvbnN0IHNlbGVjdG9yID0gYXN0LnNlbGVjdG9yKHtcbiAqICAgICBydWxlczogW1xuICogICAgICAgICBhc3QucnVsZSh7XG4gKiAgICAgICAgICAgICBpdGVtczogW1xuICogICAgICAgICAgICAgICAgIGFzdC50YWdOYW1lKHtuYW1lOiAnZGl2JywgbmFtZXNwYWNlOiBhc3QubmFtZXNwYWNlTmFtZSh7bmFtZTogJ25zJ30pfSksXG4gKiAgICAgICAgICAgICAgICAgYXN0LmlkKHtuYW1lOiAndXNlci0zNCd9KSxcbiAqICAgICAgICAgICAgICAgICBhc3QuY2xhc3NOYW1lKHtuYW1lOiAndXNlcid9KSxcbiAqICAgICAgICAgICAgICAgICBhc3QuY2xhc3NOYW1lKHtuYW1lOiAndXNlci1hY3RpdmUnfSksXG4gKiAgICAgICAgICAgICAgICAgYXN0LmF0dHJpYnV0ZSh7XG4gKiAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdyb2xlJyxcbiAqICAgICAgICAgICAgICAgICAgICAgb3BlcmF0b3I6ICc9JyxcbiAqICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGFzdC5zdHJpbmcoe3ZhbHVlOiAnYnV0dG9uJ30pXG4gKiAgICAgICAgICAgICAgICAgfSksXG4gKiAgICAgICAgICAgICAgICAgYXN0LnBzZXVkb0NsYXNzKHtcbiAqICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2xhbmcnLFxuICogICAgICAgICAgICAgICAgICAgICBhcmd1bWVudDogYXN0LnN0cmluZyh7dmFsdWU6ICdlbid9KVxuICogICAgICAgICAgICAgICAgIH0pLFxuICogICAgICAgICAgICAgICAgIGFzdC5wc2V1ZG9FbGVtZW50KHtuYW1lOiAnYmVmb3JlJ30pXG4gKiAgICAgICAgICAgICBdLFxuICogICAgICAgICAgICAgbmVzdGVkUnVsZTogYXN0LnJ1bGUoe2NvbWJpbmF0b3I6ICc+JywgaXRlbXM6IFthc3Qud2lsZGNhcmRUYWcoKV19KVxuICogICAgICAgICB9KVxuICogICAgIF1cbiAqIH0pO1xuICogY29uc29sZS5sb2coYXN0LmlzU2VsZWN0b3Ioc2VsZWN0b3IpKTsgLy8gcHJpbnRzIHRydWVcbiAqIGNvbnNvbGUubG9nKGFzdC5pc1J1bGUoc2VsZWN0b3IpKTsgLy8gcHJpbnRzIGZhbHNlXG4gKi9cbmV4cG9ydCB2YXIgYXN0ID0gX19hc3NpZ24oX19hc3NpZ24oX19hc3NpZ24oX19hc3NpZ24oX19hc3NpZ24oX19hc3NpZ24oX19hc3NpZ24oX19hc3NpZ24oX19hc3NpZ24oX19hc3NpZ24oX19hc3NpZ24oX19hc3NpZ24oX19hc3NpZ24oX19hc3NpZ24oX19hc3NpZ24oX19hc3NpZ24oe30sIGFzdE1ldGhvZHMoJ1NlbGVjdG9yJykoJ3NlbGVjdG9yJywgJ2lzU2VsZWN0b3InKSksIGFzdE1ldGhvZHMoJ1J1bGUnKSgncnVsZScsICdpc1J1bGUnKSksIGFzdE1ldGhvZHMoJ1RhZ05hbWUnKSgndGFnTmFtZScsICdpc1RhZ05hbWUnKSksIGFzdE1ldGhvZHMoJ0lkJykoJ2lkJywgJ2lzSWQnKSksIGFzdE1ldGhvZHMoJ0NsYXNzTmFtZScpKCdjbGFzc05hbWUnLCAnaXNDbGFzc05hbWUnKSksIGFzdE1ldGhvZHMoJ1dpbGRjYXJkVGFnJykoJ3dpbGRjYXJkVGFnJywgJ2lzV2lsZGNhcmRUYWcnKSksIGFzdE1ldGhvZHMoJ05hbWVzcGFjZU5hbWUnKSgnbmFtZXNwYWNlTmFtZScsICdpc05hbWVzcGFjZU5hbWUnKSksIGFzdE1ldGhvZHMoJ1dpbGRjYXJkTmFtZXNwYWNlJykoJ3dpbGRjYXJkTmFtZXNwYWNlJywgJ2lzV2lsZGNhcmROYW1lc3BhY2UnKSksIGFzdE1ldGhvZHMoJ05vTmFtZXNwYWNlJykoJ25vTmFtZXNwYWNlJywgJ2lzTm9OYW1lc3BhY2UnKSksIGFzdE1ldGhvZHMoJ0F0dHJpYnV0ZScpKCdhdHRyaWJ1dGUnLCAnaXNBdHRyaWJ1dGUnKSksIGFzdE1ldGhvZHMoJ1BzZXVkb0NsYXNzJykoJ3BzZXVkb0NsYXNzJywgJ2lzUHNldWRvQ2xhc3MnKSksIGFzdE1ldGhvZHMoJ1BzZXVkb0VsZW1lbnQnKSgncHNldWRvRWxlbWVudCcsICdpc1BzZXVkb0VsZW1lbnQnKSksIGFzdE1ldGhvZHMoJ1N0cmluZycpKCdzdHJpbmcnLCAnaXNTdHJpbmcnKSksIGFzdE1ldGhvZHMoJ0Zvcm11bGEnKSgnZm9ybXVsYScsICdpc0Zvcm11bGEnKSksIGFzdE1ldGhvZHMoJ0Zvcm11bGFPZlNlbGVjdG9yJykoJ2Zvcm11bGFPZlNlbGVjdG9yJywgJ2lzRm9ybXVsYU9mU2VsZWN0b3InKSksIGFzdE1ldGhvZHMoJ1N1YnN0aXR1dGlvbicpKCdzdWJzdGl0dXRpb24nLCAnaXNTdWJzdGl0dXRpb24nKSk7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/css-selector-parser/dist/mjs/ast.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/css-selector-parser/dist/mjs/index.js":
/*!************************************************************!*\
  !*** ./node_modules/css-selector-parser/dist/mjs/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ast: () => (/* reexport safe */ _ast_js__WEBPACK_IMPORTED_MODULE_2__.ast),\n/* harmony export */   createParser: () => (/* reexport safe */ _parser_js__WEBPACK_IMPORTED_MODULE_0__.createParser),\n/* harmony export */   render: () => (/* reexport safe */ _render_js__WEBPACK_IMPORTED_MODULE_1__.render)\n/* harmony export */ });\n/* harmony import */ var _parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parser.js */ \"(ssr)/./node_modules/css-selector-parser/dist/mjs/parser.js\");\n/* harmony import */ var _render_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./render.js */ \"(ssr)/./node_modules/css-selector-parser/dist/mjs/render.js\");\n/* harmony import */ var _ast_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ast.js */ \"(ssr)/./node_modules/css-selector-parser/dist/mjs/ast.js\");\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY3NzLXNlbGVjdG9yLXBhcnNlci9kaXN0L21qcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBMkM7QUFDTjtBQUNOIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEFDRVJcXERlc2t0b3BcXFRhbGVudCBUcmFja2VyXFxub2RlX21vZHVsZXNcXGNzcy1zZWxlY3Rvci1wYXJzZXJcXGRpc3RcXG1qc1xcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgY3JlYXRlUGFyc2VyIH0gZnJvbSAnLi9wYXJzZXIuanMnO1xuZXhwb3J0IHsgcmVuZGVyIH0gZnJvbSAnLi9yZW5kZXIuanMnO1xuZXhwb3J0IHsgYXN0IH0gZnJvbSAnLi9hc3QuanMnO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/css-selector-parser/dist/mjs/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/css-selector-parser/dist/mjs/indexes.js":
/*!**************************************************************!*\
  !*** ./node_modules/css-selector-parser/dist/mjs/indexes.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createMulticharIndex: () => (/* binding */ createMulticharIndex),\n/* harmony export */   createRegularIndex: () => (/* binding */ createRegularIndex),\n/* harmony export */   emptyMulticharIndex: () => (/* binding */ emptyMulticharIndex),\n/* harmony export */   emptyRegularIndex: () => (/* binding */ emptyRegularIndex)\n/* harmony export */ });\nvar emptyMulticharIndex = {};\nvar emptyRegularIndex = {};\nfunction extendIndex(item, index) {\n    var currentIndex = index;\n    for (var pos = 0; pos < item.length; pos++) {\n        var isLast = pos === item.length - 1;\n        var char = item.charAt(pos);\n        var charIndex = currentIndex[char] || (currentIndex[char] = { chars: {} });\n        if (isLast) {\n            charIndex.self = item;\n        }\n        currentIndex = charIndex.chars;\n    }\n}\nfunction createMulticharIndex(items) {\n    if (items.length === 0) {\n        return emptyMulticharIndex;\n    }\n    var index = {};\n    for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n        var item = items_1[_i];\n        extendIndex(item, index);\n    }\n    return index;\n}\nfunction createRegularIndex(items) {\n    if (items.length === 0) {\n        return emptyRegularIndex;\n    }\n    var result = {};\n    for (var _i = 0, items_2 = items; _i < items_2.length; _i++) {\n        var item = items_2[_i];\n        result[item] = true;\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY3NzLXNlbGVjdG9yLXBhcnNlci9kaXN0L21qcy9pbmRleGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBTztBQUNBO0FBQ1A7QUFDQTtBQUNBLHNCQUFzQixtQkFBbUI7QUFDekM7QUFDQTtBQUNBLHNFQUFzRSxXQUFXO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MscUJBQXFCO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLHFCQUFxQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEFDRVJcXERlc2t0b3BcXFRhbGVudCBUcmFja2VyXFxub2RlX21vZHVsZXNcXGNzcy1zZWxlY3Rvci1wYXJzZXJcXGRpc3RcXG1qc1xcaW5kZXhlcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgdmFyIGVtcHR5TXVsdGljaGFySW5kZXggPSB7fTtcbmV4cG9ydCB2YXIgZW1wdHlSZWd1bGFySW5kZXggPSB7fTtcbmZ1bmN0aW9uIGV4dGVuZEluZGV4KGl0ZW0sIGluZGV4KSB7XG4gICAgdmFyIGN1cnJlbnRJbmRleCA9IGluZGV4O1xuICAgIGZvciAodmFyIHBvcyA9IDA7IHBvcyA8IGl0ZW0ubGVuZ3RoOyBwb3MrKykge1xuICAgICAgICB2YXIgaXNMYXN0ID0gcG9zID09PSBpdGVtLmxlbmd0aCAtIDE7XG4gICAgICAgIHZhciBjaGFyID0gaXRlbS5jaGFyQXQocG9zKTtcbiAgICAgICAgdmFyIGNoYXJJbmRleCA9IGN1cnJlbnRJbmRleFtjaGFyXSB8fCAoY3VycmVudEluZGV4W2NoYXJdID0geyBjaGFyczoge30gfSk7XG4gICAgICAgIGlmIChpc0xhc3QpIHtcbiAgICAgICAgICAgIGNoYXJJbmRleC5zZWxmID0gaXRlbTtcbiAgICAgICAgfVxuICAgICAgICBjdXJyZW50SW5kZXggPSBjaGFySW5kZXguY2hhcnM7XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZU11bHRpY2hhckluZGV4KGl0ZW1zKSB7XG4gICAgaWYgKGl0ZW1zLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICByZXR1cm4gZW1wdHlNdWx0aWNoYXJJbmRleDtcbiAgICB9XG4gICAgdmFyIGluZGV4ID0ge307XG4gICAgZm9yICh2YXIgX2kgPSAwLCBpdGVtc18xID0gaXRlbXM7IF9pIDwgaXRlbXNfMS5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgdmFyIGl0ZW0gPSBpdGVtc18xW19pXTtcbiAgICAgICAgZXh0ZW5kSW5kZXgoaXRlbSwgaW5kZXgpO1xuICAgIH1cbiAgICByZXR1cm4gaW5kZXg7XG59XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlUmVndWxhckluZGV4KGl0ZW1zKSB7XG4gICAgaWYgKGl0ZW1zLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICByZXR1cm4gZW1wdHlSZWd1bGFySW5kZXg7XG4gICAgfVxuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICBmb3IgKHZhciBfaSA9IDAsIGl0ZW1zXzIgPSBpdGVtczsgX2kgPCBpdGVtc18yLmxlbmd0aDsgX2krKykge1xuICAgICAgICB2YXIgaXRlbSA9IGl0ZW1zXzJbX2ldO1xuICAgICAgICByZXN1bHRbaXRlbV0gPSB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/css-selector-parser/dist/mjs/indexes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/css-selector-parser/dist/mjs/parser.js":
/*!*************************************************************!*\
  !*** ./node_modules/css-selector-parser/dist/mjs/parser.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createParser: () => (/* binding */ createParser)\n/* harmony export */ });\n/* harmony import */ var _indexes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./indexes.js */ \"(ssr)/./node_modules/css-selector-parser/dist/mjs/indexes.js\");\n/* harmony import */ var _pseudo_signatures_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pseudo-signatures.js */ \"(ssr)/./node_modules/css-selector-parser/dist/mjs/pseudo-signatures.js\");\n/* harmony import */ var _syntax_definitions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./syntax-definitions.js */ \"(ssr)/./node_modules/css-selector-parser/dist/mjs/syntax-definitions.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/css-selector-parser/dist/mjs/utils.js\");\n\n\n\n\nvar errorPrefix = \"css-selector-parser parse error: \";\n/**\n * Creates a parse function to be used later to parse CSS selectors.\n */\nfunction createParser(options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.syntax, syntax = _a === void 0 ? 'latest' : _a, substitutes = options.substitutes, _b = options.strict, strict = _b === void 0 ? true : _b, modules = options.modules;\n    var syntaxDefinition = typeof syntax === 'object' ? syntax : _syntax_definitions_js__WEBPACK_IMPORTED_MODULE_2__.cssSyntaxDefinitions[syntax];\n    if (syntaxDefinition.baseSyntax) {\n        syntaxDefinition = (0,_syntax_definitions_js__WEBPACK_IMPORTED_MODULE_2__.extendSyntaxDefinition)(_syntax_definitions_js__WEBPACK_IMPORTED_MODULE_2__.cssSyntaxDefinitions[syntaxDefinition.baseSyntax], syntaxDefinition);\n    }\n    // Apply modules from syntax definition\n    if (syntaxDefinition.modules && syntaxDefinition.modules.length > 0) {\n        for (var _i = 0, _c = syntaxDefinition.modules; _i < _c.length; _i++) {\n            var module_1 = _c[_i];\n            var moduleSyntax = _syntax_definitions_js__WEBPACK_IMPORTED_MODULE_2__.cssModules[module_1];\n            if (moduleSyntax) {\n                syntaxDefinition = (0,_syntax_definitions_js__WEBPACK_IMPORTED_MODULE_2__.extendSyntaxDefinition)(moduleSyntax, syntaxDefinition);\n            }\n        }\n    }\n    // Apply additional modules if specified from options\n    if (modules && modules.length > 0) {\n        for (var _d = 0, modules_1 = modules; _d < modules_1.length; _d++) {\n            var module_2 = modules_1[_d];\n            var moduleSyntax = _syntax_definitions_js__WEBPACK_IMPORTED_MODULE_2__.cssModules[module_2];\n            if (moduleSyntax) {\n                syntaxDefinition = (0,_syntax_definitions_js__WEBPACK_IMPORTED_MODULE_2__.extendSyntaxDefinition)(moduleSyntax, syntaxDefinition);\n            }\n        }\n    }\n    var _e = syntaxDefinition.tag\n        ? [true, Boolean((0,_syntax_definitions_js__WEBPACK_IMPORTED_MODULE_2__.getXmlOptions)(syntaxDefinition.tag).wildcard)]\n        : [false, false], tagNameEnabled = _e[0], tagNameWildcardEnabled = _e[1];\n    var idEnabled = Boolean(syntaxDefinition.ids);\n    var classNamesEnabled = Boolean(syntaxDefinition.classNames);\n    var namespaceEnabled = Boolean(syntaxDefinition.namespace);\n    var namespaceWildcardEnabled = syntaxDefinition.namespace &&\n        (syntaxDefinition.namespace === true || syntaxDefinition.namespace.wildcard === true);\n    if (namespaceEnabled && !tagNameEnabled) {\n        throw new Error(\"\".concat(errorPrefix, \"Namespaces cannot be enabled while tags are disabled.\"));\n    }\n    var substitutesEnabled = Boolean(substitutes);\n    var combinatorsIndex = syntaxDefinition.combinators\n        ? (0,_indexes_js__WEBPACK_IMPORTED_MODULE_0__.createMulticharIndex)(syntaxDefinition.combinators)\n        : _indexes_js__WEBPACK_IMPORTED_MODULE_0__.emptyMulticharIndex;\n    var _f = syntaxDefinition.attributes\n        ? [\n            true,\n            syntaxDefinition.attributes.operators\n                ? (0,_indexes_js__WEBPACK_IMPORTED_MODULE_0__.createMulticharIndex)(syntaxDefinition.attributes.operators)\n                : _indexes_js__WEBPACK_IMPORTED_MODULE_0__.emptyMulticharIndex,\n            syntaxDefinition.attributes.caseSensitivityModifiers\n                ? (0,_indexes_js__WEBPACK_IMPORTED_MODULE_0__.createRegularIndex)(syntaxDefinition.attributes.caseSensitivityModifiers)\n                : _indexes_js__WEBPACK_IMPORTED_MODULE_0__.emptyRegularIndex,\n            syntaxDefinition.attributes.unknownCaseSensitivityModifiers === 'accept'\n        ]\n        : [false, _indexes_js__WEBPACK_IMPORTED_MODULE_0__.emptyMulticharIndex, _indexes_js__WEBPACK_IMPORTED_MODULE_0__.emptyRegularIndex, false], attributesEnabled = _f[0], attributesOperatorsIndex = _f[1], attributesCaseSensitivityModifiers = _f[2], attributesAcceptUnknownCaseSensitivityModifiers = _f[3];\n    var attributesCaseSensitivityModifiersEnabled = attributesAcceptUnknownCaseSensitivityModifiers || Object.keys(attributesCaseSensitivityModifiers).length > 0;\n    var _g = syntaxDefinition.pseudoClasses\n        ? [\n            true,\n            syntaxDefinition.pseudoClasses.definitions\n                ? (0,_pseudo_signatures_js__WEBPACK_IMPORTED_MODULE_1__.calculatePseudoSignatures)(syntaxDefinition.pseudoClasses.definitions)\n                : _pseudo_signatures_js__WEBPACK_IMPORTED_MODULE_1__.emptyPseudoSignatures,\n            syntaxDefinition.pseudoClasses.unknown === 'accept'\n        ]\n        : [false, _pseudo_signatures_js__WEBPACK_IMPORTED_MODULE_1__.emptyPseudoSignatures, false], pseudoClassesEnabled = _g[0], pseudoClassesDefinitions = _g[1], pseudoClassesAcceptUnknown = _g[2];\n    var _h = syntaxDefinition.pseudoElements\n        ? [\n            true,\n            syntaxDefinition.pseudoElements.notation === 'singleColon' ||\n                syntaxDefinition.pseudoElements.notation === 'both',\n            !syntaxDefinition.pseudoElements.notation ||\n                syntaxDefinition.pseudoElements.notation === 'doubleColon' ||\n                syntaxDefinition.pseudoElements.notation === 'both',\n            syntaxDefinition.pseudoElements.definitions\n                ? (0,_pseudo_signatures_js__WEBPACK_IMPORTED_MODULE_1__.calculatePseudoSignatures)(Array.isArray(syntaxDefinition.pseudoElements.definitions)\n                    ? { NoArgument: syntaxDefinition.pseudoElements.definitions }\n                    : syntaxDefinition.pseudoElements.definitions)\n                : _pseudo_signatures_js__WEBPACK_IMPORTED_MODULE_1__.emptyPseudoSignatures,\n            syntaxDefinition.pseudoElements.unknown === 'accept'\n        ]\n        : [false, false, false, _pseudo_signatures_js__WEBPACK_IMPORTED_MODULE_1__.emptyPseudoSignatures, false], pseudoElementsEnabled = _h[0], pseudoElementsSingleColonNotationEnabled = _h[1], pseudoElementsDoubleColonNotationEnabled = _h[2], pseudoElementsDefinitions = _h[3], pseudoElementsAcceptUnknown = _h[4];\n    var str = '';\n    var l = str.length;\n    var pos = 0;\n    var chr = '';\n    var is = function (comparison) { return chr === comparison; };\n    var isTagStart = function () { return is('*') || (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isIdentStart)(chr); };\n    var rewind = function (newPos) {\n        pos = newPos;\n        chr = str.charAt(pos);\n    };\n    var next = function () {\n        pos++;\n        chr = str.charAt(pos);\n    };\n    var readAndNext = function () {\n        var current = chr;\n        pos++;\n        chr = str.charAt(pos);\n        return current;\n    };\n    /** @throws ParserError */\n    function fail(errorMessage) {\n        var position = Math.min(l - 1, pos);\n        var error = new Error(\"\".concat(errorPrefix).concat(errorMessage, \" Pos: \").concat(position, \".\"));\n        error.position = position;\n        error.name = 'ParserError';\n        throw error;\n    }\n    function assert(condition, errorMessage) {\n        if (!condition) {\n            return fail(errorMessage);\n        }\n    }\n    var assertNonEof = function () {\n        assert(pos < l, 'Unexpected end of input.');\n    };\n    var isEof = function () { return pos >= l; };\n    var pass = function (character) {\n        assert(pos < l, \"Expected \\\"\".concat(character, \"\\\" but end of input reached.\"));\n        assert(chr === character, \"Expected \\\"\".concat(character, \"\\\" but \\\"\").concat(chr, \"\\\" found.\"));\n        pos++;\n        chr = str.charAt(pos);\n    };\n    function matchMulticharIndex(index) {\n        var match = matchMulticharIndexPos(index, pos);\n        if (match) {\n            pos += match.length;\n            chr = str.charAt(pos);\n            return match;\n        }\n    }\n    function matchMulticharIndexPos(index, subPos) {\n        var char = str.charAt(subPos);\n        var charIndex = index[char];\n        if (charIndex) {\n            var subMatch = matchMulticharIndexPos(charIndex.chars, subPos + 1);\n            if (subMatch) {\n                return subMatch;\n            }\n            if (charIndex.self) {\n                return charIndex.self;\n            }\n        }\n    }\n    /**\n     * @see https://www.w3.org/TR/css-syntax/#hex-digit-diagram\n     */\n    function parseHex() {\n        var hex = readAndNext();\n        var count = 1;\n        while ((0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isHex)(chr) && count < _utils_js__WEBPACK_IMPORTED_MODULE_3__.maxHexLength) {\n            hex += readAndNext();\n            count++;\n        }\n        skipSingleWhitespace();\n        return String.fromCharCode(parseInt(hex, 16));\n    }\n    /**\n     * @see https://www.w3.org/TR/css-syntax/#string-token-diagram\n     */\n    function parseString(quote) {\n        var result = '';\n        pass(quote);\n        while (pos < l) {\n            if (is(quote)) {\n                next();\n                return result;\n            }\n            else if (is('\\\\')) {\n                next();\n                if (is(quote)) {\n                    result += quote;\n                    next();\n                }\n                else if (chr === '\\n' || chr === '\\f') {\n                    next();\n                }\n                else if (chr === '\\r') {\n                    next();\n                    if (is('\\n')) {\n                        next();\n                    }\n                }\n                else if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isHex)(chr)) {\n                    result += parseHex();\n                }\n                else {\n                    result += chr;\n                    next();\n                }\n            }\n            else {\n                result += chr;\n                next();\n            }\n        }\n        return result;\n    }\n    /**\n     * @see https://www.w3.org/TR/css-syntax/#ident-token-diagram\n     */\n    function parseIdentifier() {\n        if (!(0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isIdentStart)(chr)) {\n            return null;\n        }\n        var result = '';\n        while (is('-')) {\n            result += chr;\n            next();\n        }\n        if (result === '-' && !(0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isIdent)(chr) && !is('\\\\')) {\n            fail('Identifiers cannot consist of a single hyphen.');\n        }\n        if (strict && result.length >= 2) {\n            // Checking this only for strict mode since browsers work fine with these identifiers.\n            fail('Identifiers cannot start with two hyphens with strict mode on.');\n        }\n        if (_utils_js__WEBPACK_IMPORTED_MODULE_3__.digitsChars[chr]) {\n            fail('Identifiers cannot start with hyphens followed by digits.');\n        }\n        while (pos < l) {\n            if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isIdent)(chr)) {\n                result += readAndNext();\n            }\n            else if (is('\\\\')) {\n                next();\n                assertNonEof();\n                if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isHex)(chr)) {\n                    result += parseHex();\n                }\n                else {\n                    result += readAndNext();\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return result;\n    }\n    function parsePseudoClassString() {\n        var result = '';\n        while (pos < l) {\n            if (is(')')) {\n                break;\n            }\n            else if (is('\\\\')) {\n                next();\n                if (isEof() && !strict) {\n                    return (result + '\\\\').trim();\n                }\n                assertNonEof();\n                if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isHex)(chr)) {\n                    result += parseHex();\n                }\n                else {\n                    result += readAndNext();\n                }\n            }\n            else {\n                result += readAndNext();\n            }\n        }\n        return result.trim();\n    }\n    function skipSingleWhitespace() {\n        if (chr === ' ' || chr === '\\t' || chr === '\\f' || chr === '\\n') {\n            next();\n            return;\n        }\n        if (chr === '\\r') {\n            next();\n        }\n        if (chr === '\\n') {\n            next();\n        }\n    }\n    function skipWhitespace() {\n        while (_utils_js__WEBPACK_IMPORTED_MODULE_3__.whitespaceChars[chr]) {\n            next();\n        }\n    }\n    function parseSelector(relative) {\n        if (relative === void 0) { relative = false; }\n        skipWhitespace();\n        var rules = [parseRule(relative)];\n        while (is(',')) {\n            next();\n            skipWhitespace();\n            rules.push(parseRule(relative));\n        }\n        return {\n            type: 'Selector',\n            rules: rules\n        };\n    }\n    function parseAttribute() {\n        pass('[');\n        skipWhitespace();\n        var attr;\n        if (is('|')) {\n            assert(namespaceEnabled, 'Namespaces are not enabled.');\n            next();\n            var name_1 = parseIdentifier();\n            assert(name_1, 'Expected attribute name.');\n            attr = {\n                type: 'Attribute',\n                name: name_1,\n                namespace: { type: 'NoNamespace' }\n            };\n        }\n        else if (is('*')) {\n            assert(namespaceEnabled, 'Namespaces are not enabled.');\n            assert(namespaceWildcardEnabled, 'Wildcard namespace is not enabled.');\n            next();\n            pass('|');\n            var name_2 = parseIdentifier();\n            assert(name_2, 'Expected attribute name.');\n            attr = {\n                type: 'Attribute',\n                name: name_2,\n                namespace: { type: 'WildcardNamespace' }\n            };\n        }\n        else {\n            var identifier = parseIdentifier();\n            assert(identifier, 'Expected attribute name.');\n            attr = {\n                type: 'Attribute',\n                name: identifier\n            };\n            if (is('|')) {\n                var savedPos = pos;\n                next();\n                if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isIdentStart)(chr)) {\n                    assert(namespaceEnabled, 'Namespaces are not enabled.');\n                    var name_3 = parseIdentifier();\n                    assert(name_3, 'Expected attribute name.');\n                    attr = {\n                        type: 'Attribute',\n                        name: name_3,\n                        namespace: { type: 'NamespaceName', name: identifier }\n                    };\n                }\n                else {\n                    rewind(savedPos);\n                }\n            }\n        }\n        assert(attr.name, 'Expected attribute name.');\n        skipWhitespace();\n        if (isEof() && !strict) {\n            return attr;\n        }\n        if (is(']')) {\n            next();\n        }\n        else {\n            attr.operator = matchMulticharIndex(attributesOperatorsIndex);\n            assert(attr.operator, 'Expected a valid attribute selector operator.');\n            skipWhitespace();\n            assertNonEof();\n            if (_utils_js__WEBPACK_IMPORTED_MODULE_3__.quoteChars[chr]) {\n                attr.value = {\n                    type: 'String',\n                    value: parseString(chr)\n                };\n            }\n            else if (substitutesEnabled && is('$')) {\n                next();\n                var name_4 = parseIdentifier();\n                assert(name_4, 'Expected substitute name.');\n                attr.value = {\n                    type: 'Substitution',\n                    name: name_4\n                };\n            }\n            else {\n                var value = parseIdentifier();\n                assert(value, 'Expected attribute value.');\n                attr.value = {\n                    type: 'String',\n                    value: value\n                };\n            }\n            skipWhitespace();\n            if (isEof() && !strict) {\n                return attr;\n            }\n            if (!is(']')) {\n                var caseSensitivityModifier = parseIdentifier();\n                assert(caseSensitivityModifier, 'Expected end of attribute selector.');\n                attr.caseSensitivityModifier = caseSensitivityModifier;\n                assert(attributesCaseSensitivityModifiersEnabled, 'Attribute case sensitivity modifiers are not enabled.');\n                assert(attributesAcceptUnknownCaseSensitivityModifiers ||\n                    attributesCaseSensitivityModifiers[attr.caseSensitivityModifier], 'Unknown attribute case sensitivity modifier.');\n                skipWhitespace();\n                if (isEof() && !strict) {\n                    return attr;\n                }\n            }\n            pass(']');\n        }\n        return attr;\n    }\n    function parseNumber() {\n        var result = '';\n        while (_utils_js__WEBPACK_IMPORTED_MODULE_3__.digitsChars[chr]) {\n            result += readAndNext();\n        }\n        assert(result !== '', 'Formula parse error.');\n        return parseInt(result);\n    }\n    var isNumberStart = function () { return is('-') || is('+') || _utils_js__WEBPACK_IMPORTED_MODULE_3__.digitsChars[chr]; };\n    function parseFormula() {\n        if (is('e') || is('o')) {\n            var ident = parseIdentifier();\n            if (ident === 'even') {\n                skipWhitespace();\n                return [2, 0];\n            }\n            if (ident === 'odd') {\n                skipWhitespace();\n                return [2, 1];\n            }\n        }\n        var firstNumber = null;\n        var firstNumberMultiplier = 1;\n        if (is('-')) {\n            next();\n            firstNumberMultiplier = -1;\n        }\n        if (isNumberStart()) {\n            if (is('+')) {\n                next();\n            }\n            firstNumber = parseNumber();\n            if (!is('\\\\') && !is('n')) {\n                return [0, firstNumber * firstNumberMultiplier];\n            }\n        }\n        if (firstNumber === null) {\n            firstNumber = 1;\n        }\n        firstNumber *= firstNumberMultiplier;\n        var identifier;\n        if (is('\\\\')) {\n            next();\n            if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isHex)(chr)) {\n                identifier = parseHex();\n            }\n            else {\n                identifier = readAndNext();\n            }\n        }\n        else {\n            identifier = readAndNext();\n        }\n        assert(identifier === 'n', 'Formula parse error: expected \"n\".');\n        skipWhitespace();\n        if (is('+') || is('-')) {\n            var sign = is('+') ? 1 : -1;\n            next();\n            skipWhitespace();\n            return [firstNumber, sign * parseNumber()];\n        }\n        else {\n            return [firstNumber, 0];\n        }\n    }\n    function parsePseudoArgument(pseudoName, type, signature) {\n        var argument;\n        if (is('(')) {\n            next();\n            skipWhitespace();\n            if (substitutesEnabled && is('$')) {\n                next();\n                var name_5 = parseIdentifier();\n                assert(name_5, 'Expected substitute name.');\n                argument = {\n                    type: 'Substitution',\n                    name: name_5\n                };\n            }\n            else if (signature.type === 'String') {\n                argument = {\n                    type: 'String',\n                    value: parsePseudoClassString()\n                };\n                assert(argument.value, \"Expected \".concat(type, \" argument value.\"));\n            }\n            else if (signature.type === 'Selector') {\n                argument = parseSelector(true);\n            }\n            else if (signature.type === 'Formula') {\n                var _a = parseFormula(), a = _a[0], b = _a[1];\n                argument = {\n                    type: 'Formula',\n                    a: a,\n                    b: b\n                };\n                if (signature.ofSelector) {\n                    skipWhitespace();\n                    if (is('o') || is('\\\\')) {\n                        var ident = parseIdentifier();\n                        assert(ident === 'of', 'Formula of selector parse error.');\n                        skipWhitespace();\n                        argument = {\n                            type: 'FormulaOfSelector',\n                            a: a,\n                            b: b,\n                            selector: parseRule()\n                        };\n                    }\n                }\n            }\n            else {\n                return fail(\"Invalid \".concat(type, \" signature.\"));\n            }\n            skipWhitespace();\n            if (isEof() && !strict) {\n                return argument;\n            }\n            pass(')');\n        }\n        else {\n            assert(signature.optional, \"Argument is required for \".concat(type, \" \\\"\").concat(pseudoName, \"\\\".\"));\n        }\n        return argument;\n    }\n    function parseTagName() {\n        if (is('*')) {\n            assert(tagNameWildcardEnabled, 'Wildcard tag name is not enabled.');\n            next();\n            return { type: 'WildcardTag' };\n        }\n        else if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isIdentStart)(chr)) {\n            assert(tagNameEnabled, 'Tag names are not enabled.');\n            var name_6 = parseIdentifier();\n            assert(name_6, 'Expected tag name.');\n            return {\n                type: 'TagName',\n                name: name_6\n            };\n        }\n        else {\n            return fail('Expected tag name.');\n        }\n    }\n    function parseTagNameWithNamespace() {\n        if (is('*')) {\n            var savedPos = pos;\n            next();\n            if (!is('|')) {\n                rewind(savedPos);\n                return parseTagName();\n            }\n            next();\n            if (!isTagStart()) {\n                rewind(savedPos);\n                return parseTagName();\n            }\n            assert(namespaceEnabled, 'Namespaces are not enabled.');\n            assert(namespaceWildcardEnabled, 'Wildcard namespace is not enabled.');\n            var tagName = parseTagName();\n            tagName.namespace = { type: 'WildcardNamespace' };\n            return tagName;\n        }\n        else if (is('|')) {\n            assert(namespaceEnabled, 'Namespaces are not enabled.');\n            next();\n            var tagName = parseTagName();\n            tagName.namespace = { type: 'NoNamespace' };\n            return tagName;\n        }\n        else if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isIdentStart)(chr)) {\n            var identifier = parseIdentifier();\n            assert(identifier, 'Expected tag name.');\n            if (!is('|')) {\n                assert(tagNameEnabled, 'Tag names are not enabled.');\n                return {\n                    type: 'TagName',\n                    name: identifier\n                };\n            }\n            var savedPos = pos;\n            next();\n            if (!isTagStart()) {\n                rewind(savedPos);\n                return {\n                    type: 'TagName',\n                    name: identifier\n                };\n            }\n            assert(namespaceEnabled, 'Namespaces are not enabled.');\n            var tagName = parseTagName();\n            tagName.namespace = { type: 'NamespaceName', name: identifier };\n            return tagName;\n        }\n        else {\n            return fail('Expected tag name.');\n        }\n    }\n    function parseRule(relative) {\n        var _a, _b;\n        if (relative === void 0) { relative = false; }\n        var rule = { type: 'Rule', items: [] };\n        if (relative) {\n            var combinator = matchMulticharIndex(combinatorsIndex);\n            if (combinator) {\n                rule.combinator = combinator;\n                skipWhitespace();\n            }\n        }\n        while (pos < l) {\n            if (isTagStart()) {\n                assert(rule.items.length === 0, 'Unexpected tag/namespace start.');\n                rule.items.push(parseTagNameWithNamespace());\n            }\n            else if (is('|')) {\n                var savedPos = pos;\n                next();\n                if (isTagStart()) {\n                    assert(rule.items.length === 0, 'Unexpected tag/namespace start.');\n                    rewind(savedPos);\n                    rule.items.push(parseTagNameWithNamespace());\n                }\n                else {\n                    rewind(savedPos);\n                    break;\n                }\n            }\n            else if (is('.')) {\n                assert(classNamesEnabled, 'Class names are not enabled.');\n                next();\n                var className = parseIdentifier();\n                assert(className, 'Expected class name.');\n                rule.items.push({ type: 'ClassName', name: className });\n            }\n            else if (is('#')) {\n                assert(idEnabled, 'IDs are not enabled.');\n                next();\n                var idName = parseIdentifier();\n                assert(idName, 'Expected ID name.');\n                rule.items.push({ type: 'Id', name: idName });\n            }\n            else if (is('[')) {\n                assert(attributesEnabled, 'Attributes are not enabled.');\n                rule.items.push(parseAttribute());\n            }\n            else if (is(':')) {\n                var isDoubleColon = false;\n                var isPseudoElement = false;\n                next();\n                if (is(':')) {\n                    assert(pseudoElementsEnabled, 'Pseudo elements are not enabled.');\n                    assert(pseudoElementsDoubleColonNotationEnabled, 'Pseudo elements double colon notation is not enabled.');\n                    isDoubleColon = true;\n                    next();\n                }\n                var pseudoName = parseIdentifier();\n                assert(isDoubleColon || pseudoName, 'Expected pseudo-class name.');\n                assert(!isDoubleColon || pseudoName, 'Expected pseudo-element name.');\n                assert(pseudoName, 'Expected pseudo-class name.');\n                if (!isDoubleColon ||\n                    pseudoElementsAcceptUnknown ||\n                    Object.prototype.hasOwnProperty.call(pseudoElementsDefinitions, pseudoName)) {\n                    // All good\n                }\n                else {\n                    // Generate a helpful error message with location information\n                    var locations = _syntax_definitions_js__WEBPACK_IMPORTED_MODULE_2__.pseudoLocationIndex.pseudoElements[pseudoName];\n                    var errorMessage = \"Unknown pseudo-element \\\"\".concat(pseudoName, \"\\\"\");\n                    if (locations && locations.length > 0) {\n                        errorMessage += \". It is defined in: \".concat(locations.join(', '));\n                    }\n                    fail(errorMessage + '.');\n                }\n                isPseudoElement =\n                    pseudoElementsEnabled &&\n                        (isDoubleColon ||\n                            (!isDoubleColon &&\n                                pseudoElementsSingleColonNotationEnabled &&\n                                Object.prototype.hasOwnProperty.call(pseudoElementsDefinitions, pseudoName)));\n                if (isPseudoElement) {\n                    var signature = (_a = pseudoElementsDefinitions[pseudoName]) !== null && _a !== void 0 ? _a : (pseudoElementsAcceptUnknown && _pseudo_signatures_js__WEBPACK_IMPORTED_MODULE_1__.defaultPseudoSignature);\n                    var pseudoElement = {\n                        type: 'PseudoElement',\n                        name: pseudoName\n                    };\n                    var argument = parsePseudoArgument(pseudoName, 'pseudo-element', signature);\n                    if (argument) {\n                        assert(argument.type !== 'Formula' && argument.type !== 'FormulaOfSelector', 'Pseudo-elements cannot have formula argument.');\n                        pseudoElement.argument = argument;\n                    }\n                    rule.items.push(pseudoElement);\n                }\n                else {\n                    assert(pseudoClassesEnabled, 'Pseudo-classes are not enabled.');\n                    var signature = (_b = pseudoClassesDefinitions[pseudoName]) !== null && _b !== void 0 ? _b : (pseudoClassesAcceptUnknown && _pseudo_signatures_js__WEBPACK_IMPORTED_MODULE_1__.defaultPseudoSignature);\n                    if (signature) {\n                        // All good\n                    }\n                    else {\n                        // Generate a helpful error message with location information\n                        var locations = _syntax_definitions_js__WEBPACK_IMPORTED_MODULE_2__.pseudoLocationIndex.pseudoClasses[pseudoName];\n                        var errorMessage = \"Unknown pseudo-class: \\\"\".concat(pseudoName, \"\\\"\");\n                        if (locations && locations.length > 0) {\n                            errorMessage += \". It is defined in: \".concat(locations.join(', '));\n                        }\n                        fail(errorMessage + '.');\n                    }\n                    var argument = parsePseudoArgument(pseudoName, 'pseudo-class', signature);\n                    var pseudoClass = {\n                        type: 'PseudoClass',\n                        name: pseudoName\n                    };\n                    if (argument) {\n                        pseudoClass.argument = argument;\n                    }\n                    rule.items.push(pseudoClass);\n                }\n            }\n            else {\n                break;\n            }\n        }\n        if (rule.items.length === 0) {\n            if (isEof()) {\n                return fail('Expected rule but end of input reached.');\n            }\n            else {\n                return fail(\"Expected rule but \\\"\".concat(chr, \"\\\" found.\"));\n            }\n        }\n        skipWhitespace();\n        if (!isEof() && !is(',') && !is(')')) {\n            var combinator = matchMulticharIndex(combinatorsIndex);\n            skipWhitespace();\n            rule.nestedRule = parseRule();\n            rule.nestedRule.combinator = combinator;\n        }\n        return rule;\n    }\n    return function (input) {\n        // noinspection SuspiciousTypeOfGuard\n        if (typeof input !== 'string') {\n            throw new Error(\"\".concat(errorPrefix, \"Expected string input.\"));\n        }\n        str = input;\n        l = str.length;\n        pos = 0;\n        chr = str.charAt(0);\n        return parseSelector();\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/css-selector-parser/dist/mjs/parser.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/css-selector-parser/dist/mjs/pseudo-signatures.js":
/*!************************************************************************!*\
  !*** ./node_modules/css-selector-parser/dist/mjs/pseudo-signatures.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculatePseudoSignatures: () => (/* binding */ calculatePseudoSignatures),\n/* harmony export */   defaultPseudoSignature: () => (/* binding */ defaultPseudoSignature),\n/* harmony export */   emptyPseudoSignatures: () => (/* binding */ emptyPseudoSignatures),\n/* harmony export */   inverseCategories: () => (/* binding */ inverseCategories)\n/* harmony export */ });\nvar emptyPseudoSignatures = {};\nvar defaultPseudoSignature = {\n    type: 'String',\n    optional: true\n};\nfunction calculatePseudoSignature(types) {\n    var result = {\n        type: 'NoArgument',\n        optional: false\n    };\n    function setResultType(type) {\n        if (result.type && result.type !== type && result.type !== 'NoArgument') {\n            throw new Error(\"Conflicting pseudo-class argument type: \\\"\".concat(result.type, \"\\\" vs \\\"\").concat(type, \"\\\".\"));\n        }\n        result.type = type;\n    }\n    for (var _i = 0, types_1 = types; _i < types_1.length; _i++) {\n        var type = types_1[_i];\n        if (type === 'NoArgument') {\n            result.optional = true;\n        }\n        if (type === 'Formula') {\n            setResultType('Formula');\n        }\n        if (type === 'FormulaOfSelector') {\n            setResultType('Formula');\n            result.ofSelector = true;\n        }\n        if (type === 'String') {\n            setResultType('String');\n        }\n        if (type === 'Selector') {\n            setResultType('Selector');\n        }\n    }\n    return result;\n}\nfunction inverseCategories(obj) {\n    var result = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var category = _a[_i];\n        var items = obj[category];\n        if (items) {\n            for (var _b = 0, _c = items; _b < _c.length; _b++) {\n                var item = _c[_b];\n                (result[item] || (result[item] = [])).push(category);\n            }\n        }\n    }\n    return result;\n}\nfunction calculatePseudoSignatures(definitions) {\n    var pseudoClassesToArgumentTypes = inverseCategories(definitions);\n    var result = {};\n    for (var _i = 0, _a = Object.keys(pseudoClassesToArgumentTypes); _i < _a.length; _i++) {\n        var pseudoClass = _a[_i];\n        var argumentTypes = pseudoClassesToArgumentTypes[pseudoClass];\n        if (argumentTypes) {\n            result[pseudoClass] = calculatePseudoSignature(argumentTypes);\n        }\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY3NzLXNlbGVjdG9yLXBhcnNlci9kaXN0L21qcy9wc2V1ZG8tc2lnbmF0dXJlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQU87QUFDQTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MscUJBQXFCO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsNENBQTRDLGdCQUFnQjtBQUM1RDtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsZ0JBQWdCO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EscUVBQXFFLGdCQUFnQjtBQUNyRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEFDRVJcXERlc2t0b3BcXFRhbGVudCBUcmFja2VyXFxub2RlX21vZHVsZXNcXGNzcy1zZWxlY3Rvci1wYXJzZXJcXGRpc3RcXG1qc1xccHNldWRvLXNpZ25hdHVyZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHZhciBlbXB0eVBzZXVkb1NpZ25hdHVyZXMgPSB7fTtcbmV4cG9ydCB2YXIgZGVmYXVsdFBzZXVkb1NpZ25hdHVyZSA9IHtcbiAgICB0eXBlOiAnU3RyaW5nJyxcbiAgICBvcHRpb25hbDogdHJ1ZVxufTtcbmZ1bmN0aW9uIGNhbGN1bGF0ZVBzZXVkb1NpZ25hdHVyZSh0eXBlcykge1xuICAgIHZhciByZXN1bHQgPSB7XG4gICAgICAgIHR5cGU6ICdOb0FyZ3VtZW50JyxcbiAgICAgICAgb3B0aW9uYWw6IGZhbHNlXG4gICAgfTtcbiAgICBmdW5jdGlvbiBzZXRSZXN1bHRUeXBlKHR5cGUpIHtcbiAgICAgICAgaWYgKHJlc3VsdC50eXBlICYmIHJlc3VsdC50eXBlICE9PSB0eXBlICYmIHJlc3VsdC50eXBlICE9PSAnTm9Bcmd1bWVudCcpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvbmZsaWN0aW5nIHBzZXVkby1jbGFzcyBhcmd1bWVudCB0eXBlOiBcXFwiXCIuY29uY2F0KHJlc3VsdC50eXBlLCBcIlxcXCIgdnMgXFxcIlwiKS5jb25jYXQodHlwZSwgXCJcXFwiLlwiKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmVzdWx0LnR5cGUgPSB0eXBlO1xuICAgIH1cbiAgICBmb3IgKHZhciBfaSA9IDAsIHR5cGVzXzEgPSB0eXBlczsgX2kgPCB0eXBlc18xLmxlbmd0aDsgX2krKykge1xuICAgICAgICB2YXIgdHlwZSA9IHR5cGVzXzFbX2ldO1xuICAgICAgICBpZiAodHlwZSA9PT0gJ05vQXJndW1lbnQnKSB7XG4gICAgICAgICAgICByZXN1bHQub3B0aW9uYWwgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlID09PSAnRm9ybXVsYScpIHtcbiAgICAgICAgICAgIHNldFJlc3VsdFR5cGUoJ0Zvcm11bGEnKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZSA9PT0gJ0Zvcm11bGFPZlNlbGVjdG9yJykge1xuICAgICAgICAgICAgc2V0UmVzdWx0VHlwZSgnRm9ybXVsYScpO1xuICAgICAgICAgICAgcmVzdWx0Lm9mU2VsZWN0b3IgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlID09PSAnU3RyaW5nJykge1xuICAgICAgICAgICAgc2V0UmVzdWx0VHlwZSgnU3RyaW5nJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGUgPT09ICdTZWxlY3RvcicpIHtcbiAgICAgICAgICAgIHNldFJlc3VsdFR5cGUoJ1NlbGVjdG9yJyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpbnZlcnNlQ2F0ZWdvcmllcyhvYmopIHtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgZm9yICh2YXIgX2kgPSAwLCBfYSA9IE9iamVjdC5rZXlzKG9iaik7IF9pIDwgX2EubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgIHZhciBjYXRlZ29yeSA9IF9hW19pXTtcbiAgICAgICAgdmFyIGl0ZW1zID0gb2JqW2NhdGVnb3J5XTtcbiAgICAgICAgaWYgKGl0ZW1zKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBfYiA9IDAsIF9jID0gaXRlbXM7IF9iIDwgX2MubGVuZ3RoOyBfYisrKSB7XG4gICAgICAgICAgICAgICAgdmFyIGl0ZW0gPSBfY1tfYl07XG4gICAgICAgICAgICAgICAgKHJlc3VsdFtpdGVtXSB8fCAocmVzdWx0W2l0ZW1dID0gW10pKS5wdXNoKGNhdGVnb3J5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNhbGN1bGF0ZVBzZXVkb1NpZ25hdHVyZXMoZGVmaW5pdGlvbnMpIHtcbiAgICB2YXIgcHNldWRvQ2xhc3Nlc1RvQXJndW1lbnRUeXBlcyA9IGludmVyc2VDYXRlZ29yaWVzKGRlZmluaXRpb25zKTtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgZm9yICh2YXIgX2kgPSAwLCBfYSA9IE9iamVjdC5rZXlzKHBzZXVkb0NsYXNzZXNUb0FyZ3VtZW50VHlwZXMpOyBfaSA8IF9hLmxlbmd0aDsgX2krKykge1xuICAgICAgICB2YXIgcHNldWRvQ2xhc3MgPSBfYVtfaV07XG4gICAgICAgIHZhciBhcmd1bWVudFR5cGVzID0gcHNldWRvQ2xhc3Nlc1RvQXJndW1lbnRUeXBlc1twc2V1ZG9DbGFzc107XG4gICAgICAgIGlmIChhcmd1bWVudFR5cGVzKSB7XG4gICAgICAgICAgICByZXN1bHRbcHNldWRvQ2xhc3NdID0gY2FsY3VsYXRlUHNldWRvU2lnbmF0dXJlKGFyZ3VtZW50VHlwZXMpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/css-selector-parser/dist/mjs/pseudo-signatures.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/css-selector-parser/dist/mjs/render.js":
/*!*************************************************************!*\
  !*** ./node_modules/css-selector-parser/dist/mjs/render.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   render: () => (/* binding */ render)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/css-selector-parser/dist/mjs/utils.js\");\n\nvar errorPrefix = \"css-selector-parser render error: \";\nfunction renderNamespace(namespace) {\n    if (namespace.type === 'WildcardNamespace') {\n        return '*|';\n    }\n    else if (namespace.type === 'NamespaceName') {\n        return \"\".concat((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.escapeIdentifier)(namespace.name), \"|\");\n    }\n    else if (namespace.type === 'NoNamespace') {\n        return '|';\n    }\n    throw new Error(\"\".concat(errorPrefix, \"Unknown namespace type: \").concat(namespace.type, \".\"));\n}\nfunction renderSubstitution(sub) {\n    return \"$\".concat((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.escapeIdentifier)(sub.name));\n}\nfunction renderFormula(a, b) {\n    if (a) {\n        var result = \"\".concat(a === 1 ? '' : a === -1 ? '-' : a, \"n\");\n        if (b) {\n            result += \"\".concat(b > 0 ? '+' : '').concat(b);\n        }\n        return result;\n    }\n    else {\n        return String(b);\n    }\n}\n/**\n * Renders CSS Selector AST back to a string.\n *\n * @example\n *\n * import {ast, render} from 'css-selector-parser';\n *\n * const selector = ast.selector({\n *     rules: [\n *         ast.rule({\n *             items: [\n *                 ast.tagName({name: 'a'}),\n *                 ast.id({name: 'user-23'}),\n *                 ast.className({name: 'user'}),\n *                 ast.pseudoClass({name: 'visited'}),\n *                 ast.pseudoElement({name: 'before'})\n *             ]\n *         })\n *     ]\n * });\n *\n * console.log(render(selector)); // a#user-23.user:visited::before\n */\nfunction render(entity) {\n    if (entity.type === 'Selector') {\n        return entity.rules.map(render).join(', ');\n    }\n    if (entity.type === 'Rule') {\n        var result = '';\n        var items = entity.items, combinator = entity.combinator, nestedRule = entity.nestedRule;\n        if (combinator) {\n            result += \"\".concat(combinator, \" \");\n        }\n        for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n            var item = items_1[_i];\n            result += render(item);\n        }\n        if (nestedRule) {\n            result += \" \".concat(render(nestedRule));\n        }\n        return result;\n    }\n    else if (entity.type === 'TagName' || entity.type === 'WildcardTag') {\n        var result = '';\n        var namespace = entity.namespace;\n        if (namespace) {\n            result += renderNamespace(namespace);\n        }\n        if (entity.type === 'TagName') {\n            result += (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.escapeIdentifier)(entity.name);\n        }\n        else if (entity.type === 'WildcardTag') {\n            result += '*';\n        }\n        return result;\n    }\n    else if (entity.type === 'Id') {\n        return \"#\".concat((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.escapeIdentifier)(entity.name));\n    }\n    else if (entity.type === 'ClassName') {\n        return \".\".concat((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.escapeIdentifier)(entity.name));\n    }\n    else if (entity.type === 'Attribute') {\n        var name_1 = entity.name, namespace = entity.namespace, operator = entity.operator, value = entity.value, caseSensitivityModifier = entity.caseSensitivityModifier;\n        var result = '[';\n        if (namespace) {\n            result += renderNamespace(namespace);\n        }\n        result += (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.escapeIdentifier)(name_1);\n        if (operator && value) {\n            result += operator;\n            if (value.type === 'String') {\n                result += (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.escapeString)(value.value);\n            }\n            else if (value.type === 'Substitution') {\n                result += renderSubstitution(value);\n            }\n            else {\n                throw new Error(\"Unknown attribute value type: \".concat(value.type, \".\"));\n            }\n            if (caseSensitivityModifier) {\n                result += \" \".concat((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.escapeIdentifier)(caseSensitivityModifier));\n            }\n        }\n        result += ']';\n        return result;\n    }\n    else if (entity.type === 'PseudoClass') {\n        var name_2 = entity.name, argument = entity.argument;\n        var result = \":\".concat((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.escapeIdentifier)(name_2));\n        if (argument) {\n            result += \"(\".concat(argument.type === 'String' ? (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.escapeIdentifier)(argument.value) : render(argument), \")\");\n        }\n        return result;\n    }\n    else if (entity.type === 'PseudoElement') {\n        var name_3 = entity.name, argument = entity.argument;\n        var result = \"::\".concat((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.escapeIdentifier)(name_3));\n        if (argument) {\n            result += \"(\".concat(argument.type === 'String' ? (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.escapeIdentifier)(argument.value) : render(argument), \")\");\n        }\n        return result;\n    }\n    else if (entity.type === 'String') {\n        throw new Error(\"\".concat(errorPrefix, \"String cannot be rendered outside of context.\"));\n    }\n    else if (entity.type === 'Formula') {\n        return renderFormula(entity.a, entity.b);\n    }\n    else if (entity.type === 'FormulaOfSelector') {\n        return renderFormula(entity.a, entity.b) + ' of ' + render(entity.selector);\n    }\n    else if (entity.type === 'Substitution') {\n        return \"$\".concat((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.escapeIdentifier)(entity.name));\n    }\n    throw new Error(\"Unknown type specified to render method: \".concat(entity.type, \".\"));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/css-selector-parser/dist/mjs/render.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/css-selector-parser/dist/mjs/syntax-definitions.js":
/*!*************************************************************************!*\
  !*** ./node_modules/css-selector-parser/dist/mjs/syntax-definitions.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildPseudoLocationIndex: () => (/* binding */ buildPseudoLocationIndex),\n/* harmony export */   cssModules: () => (/* binding */ cssModules),\n/* harmony export */   cssSyntaxDefinitions: () => (/* binding */ cssSyntaxDefinitions),\n/* harmony export */   extendSyntaxDefinition: () => (/* binding */ extendSyntaxDefinition),\n/* harmony export */   getXmlOptions: () => (/* binding */ getXmlOptions),\n/* harmony export */   pseudoLocationIndex: () => (/* binding */ pseudoLocationIndex)\n/* harmony export */ });\nvar __assign = (undefined && undefined.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar emptyXmlOptions = {};\nvar defaultXmlOptions = { wildcard: true };\nfunction getXmlOptions(param) {\n    if (param) {\n        if (typeof param === 'boolean') {\n            return defaultXmlOptions;\n        }\n        else {\n            return param;\n        }\n    }\n    else {\n        return emptyXmlOptions;\n    }\n}\nfunction withMigration(migration, merge) {\n    return function (base, extension) { return merge(migration(base), migration(extension)); };\n}\nfunction withNoNegative(merge) {\n    return function (base, extension) {\n        var result = merge(base, extension);\n        if (!result) {\n            throw new Error(\"Syntax definition cannot be null or undefined.\");\n        }\n        return result;\n    };\n}\nfunction withPositive(positive, merge) {\n    return function (base, extension) {\n        if (extension === true) {\n            return positive;\n        }\n        return merge(base === true ? positive : base, extension);\n    };\n}\nfunction mergeSection(values) {\n    return function (base, extension) {\n        if (!extension || !base) {\n            return extension;\n        }\n        if (typeof extension !== 'object' || extension === null) {\n            throw new Error(\"Unexpected syntax definition extension type: \".concat(extension, \".\"));\n        }\n        var result = __assign({}, base);\n        for (var _i = 0, _a = Object.entries(extension); _i < _a.length; _i++) {\n            var _b = _a[_i], key = _b[0], value = _b[1];\n            if (key === 'latest') {\n                continue;\n            }\n            var mergeSchema = values[key];\n            result[key] = mergeSchema(base[key], value);\n        }\n        return result;\n    };\n}\nfunction replaceValueIfSpecified(base, extension) {\n    if (extension !== undefined) {\n        return extension;\n    }\n    return base;\n}\nfunction concatArray(base, extension) {\n    if (!extension) {\n        return base;\n    }\n    if (!base) {\n        return extension;\n    }\n    return base.concat(extension);\n}\nfunction mergeDefinitions(base, extension) {\n    if (!extension) {\n        return base;\n    }\n    if (!base) {\n        return extension;\n    }\n    var result = __assign({}, base);\n    for (var _i = 0, _a = Object.entries(extension); _i < _a.length; _i++) {\n        var _b = _a[_i], key = _b[0], value = _b[1];\n        if (!value) {\n            delete result[key];\n            continue;\n        }\n        var baseValue = base[key];\n        if (!baseValue) {\n            result[key] = value;\n            continue;\n        }\n        result[key] = baseValue.concat(value);\n    }\n    return result;\n}\nvar extendSyntaxDefinition = withNoNegative(mergeSection({\n    baseSyntax: replaceValueIfSpecified,\n    modules: concatArray,\n    tag: withPositive(defaultXmlOptions, mergeSection({\n        wildcard: replaceValueIfSpecified\n    })),\n    ids: replaceValueIfSpecified,\n    classNames: replaceValueIfSpecified,\n    namespace: withPositive(defaultXmlOptions, mergeSection({\n        wildcard: replaceValueIfSpecified\n    })),\n    combinators: concatArray,\n    attributes: mergeSection({\n        operators: concatArray,\n        caseSensitivityModifiers: concatArray,\n        unknownCaseSensitivityModifiers: replaceValueIfSpecified\n    }),\n    pseudoClasses: mergeSection({\n        unknown: replaceValueIfSpecified,\n        definitions: mergeDefinitions\n    }),\n    pseudoElements: mergeSection({\n        unknown: replaceValueIfSpecified,\n        notation: replaceValueIfSpecified,\n        definitions: withMigration(function (definitions) { return (Array.isArray(definitions) ? { NoArgument: definitions } : definitions); }, mergeDefinitions)\n    })\n}));\nvar css1SyntaxDefinition = {\n    tag: {},\n    ids: true,\n    classNames: true,\n    combinators: [],\n    pseudoElements: {\n        unknown: 'reject',\n        notation: 'singleColon',\n        definitions: ['first-letter', 'first-line']\n    },\n    pseudoClasses: {\n        unknown: 'reject',\n        definitions: {\n            NoArgument: ['link', 'visited', 'active']\n        }\n    }\n};\nvar css2SyntaxDefinition = extendSyntaxDefinition(css1SyntaxDefinition, {\n    tag: { wildcard: true },\n    combinators: ['>', '+'],\n    attributes: {\n        unknownCaseSensitivityModifiers: 'reject',\n        operators: ['=', '~=', '|=']\n    },\n    pseudoElements: {\n        definitions: ['before', 'after']\n    },\n    pseudoClasses: {\n        unknown: 'reject',\n        definitions: {\n            NoArgument: ['hover', 'focus', 'first-child'],\n            String: ['lang']\n        }\n    }\n});\nvar selectors3SyntaxDefinition = extendSyntaxDefinition(css2SyntaxDefinition, {\n    namespace: {\n        wildcard: true\n    },\n    combinators: ['~'],\n    attributes: {\n        operators: ['^=', '$=', '*=']\n    },\n    pseudoElements: {\n        notation: 'both'\n    },\n    pseudoClasses: {\n        definitions: {\n            NoArgument: [\n                'root',\n                'last-child',\n                'first-of-type',\n                'last-of-type',\n                'only-child',\n                'only-of-type',\n                'empty',\n                'target',\n                'enabled',\n                'disabled',\n                'checked',\n                'indeterminate'\n            ],\n            Formula: ['nth-child', 'nth-last-child', 'nth-of-type', 'nth-last-of-type'],\n            Selector: ['not']\n        }\n    }\n});\nvar selectors4SyntaxDefinition = extendSyntaxDefinition(selectors3SyntaxDefinition, {\n    combinators: ['||'],\n    attributes: {\n        caseSensitivityModifiers: ['i', 'I', 's', 'S']\n    },\n    pseudoClasses: {\n        definitions: {\n            NoArgument: [\n                'any-link',\n                'local-link',\n                'target-within',\n                'scope',\n                'current',\n                'past',\n                'future',\n                'focus-within',\n                'focus-visible',\n                'read-write',\n                'read-only',\n                'placeholder-shown',\n                'default',\n                'valid',\n                'invalid',\n                'in-range',\n                'out-of-range',\n                'required',\n                'optional',\n                'blank',\n                'user-invalid',\n                'playing',\n                'paused',\n                'autofill',\n                'modal',\n                'fullscreen',\n                'picture-in-picture',\n                'defined',\n                'loading',\n                'popover-open'\n            ],\n            Formula: ['nth-col', 'nth-last-col'],\n            String: ['dir'],\n            FormulaOfSelector: ['nth-child', 'nth-last-child'],\n            Selector: ['current', 'is', 'where', 'has', 'state']\n        }\n    },\n    pseudoElements: {\n        definitions: {\n            NoArgument: ['marker'],\n            Selector: ['part']\n        }\n    }\n});\n/**\n * CSS Modules with their syntax definitions.\n * These can be used to extend the parser with specific CSS modules.\n *\n * @example\n * // Using the css-position-3 module\n * createParser({ modules: ['css-position-3'] })\n */\nvar cssModules = {\n    'css-position-1': {\n        latest: false,\n        pseudoClasses: {\n            definitions: {\n                NoArgument: ['static', 'relative', 'absolute']\n            }\n        }\n    },\n    'css-position-2': {\n        latest: false,\n        pseudoClasses: {\n            definitions: {\n                NoArgument: ['static', 'relative', 'absolute', 'fixed']\n            }\n        }\n    },\n    'css-position-3': {\n        latest: false,\n        pseudoClasses: {\n            definitions: {\n                NoArgument: ['sticky', 'fixed', 'absolute', 'relative', 'static']\n            }\n        }\n    },\n    'css-position-4': {\n        latest: true,\n        pseudoClasses: {\n            definitions: {\n                NoArgument: ['sticky', 'fixed', 'absolute', 'relative', 'static', 'initial']\n            }\n        }\n    },\n    'css-scoping-1': {\n        latest: true,\n        pseudoClasses: {\n            definitions: {\n                NoArgument: ['host', 'host-context'],\n                Selector: ['host', 'host-context']\n            }\n        },\n        pseudoElements: {\n            definitions: {\n                Selector: ['slotted']\n            }\n        }\n    },\n    'css-pseudo-4': {\n        latest: true,\n        pseudoElements: {\n            definitions: {\n                NoArgument: [\n                    'marker',\n                    'selection',\n                    'target-text',\n                    'search-text',\n                    'spelling-error',\n                    'grammar-error',\n                    'backdrop',\n                    'file-selector-button',\n                    'prefix',\n                    'postfix',\n                    'placeholder',\n                    'details-content'\n                ],\n                String: ['highlight']\n            }\n        }\n    },\n    'css-shadow-parts-1': {\n        latest: true,\n        pseudoElements: {\n            definitions: {\n                Selector: ['part']\n            }\n        }\n    }\n};\nvar latestSyntaxDefinition = __assign(__assign({}, selectors4SyntaxDefinition), { modules: Object.entries(cssModules)\n        .filter(function (_a) {\n        var latest = _a[1].latest;\n        return latest;\n    })\n        .map(function (_a) {\n        var name = _a[0];\n        return name;\n    }) });\nvar progressiveSyntaxDefinition = extendSyntaxDefinition(latestSyntaxDefinition, {\n    pseudoElements: {\n        unknown: 'accept'\n    },\n    pseudoClasses: {\n        unknown: 'accept'\n    },\n    attributes: {\n        unknownCaseSensitivityModifiers: 'accept'\n    }\n});\nvar cssSyntaxDefinitions = {\n    css1: css1SyntaxDefinition,\n    css2: css2SyntaxDefinition,\n    css3: selectors3SyntaxDefinition,\n    'selectors-3': selectors3SyntaxDefinition,\n    'selectors-4': selectors4SyntaxDefinition,\n    latest: latestSyntaxDefinition,\n    progressive: progressiveSyntaxDefinition\n};\n/**\n * Builds an index of where each pseudo-class and pseudo-element is defined\n * (in which CSS Level or CSS Module)\n */\nfunction buildPseudoLocationIndex() {\n    var index = {\n        pseudoClasses: {},\n        pseudoElements: {}\n    };\n    // Add CSS Levels (excluding 'latest' and 'progressive')\n    var cssLevels = ['css1', 'css2', 'css3', 'selectors-3', 'selectors-4'];\n    for (var _i = 0, cssLevels_1 = cssLevels; _i < cssLevels_1.length; _i++) {\n        var level = cssLevels_1[_i];\n        var syntax = cssSyntaxDefinitions[level];\n        // Process pseudo-classes\n        if (syntax.pseudoClasses && typeof syntax.pseudoClasses === 'object') {\n            var definitions = syntax.pseudoClasses.definitions;\n            if (definitions) {\n                for (var _a = 0, _b = Object.entries(definitions); _a < _b.length; _a++) {\n                    var _c = _b[_a], names = _c[1];\n                    for (var _d = 0, names_1 = names; _d < names_1.length; _d++) {\n                        var name_1 = names_1[_d];\n                        if (!index.pseudoClasses[name_1]) {\n                            index.pseudoClasses[name_1] = [];\n                        }\n                        if (!index.pseudoClasses[name_1].includes(level)) {\n                            index.pseudoClasses[name_1].push(level);\n                        }\n                    }\n                }\n            }\n        }\n        // Process pseudo-elements\n        if (syntax.pseudoElements && typeof syntax.pseudoElements === 'object') {\n            var definitions = syntax.pseudoElements.definitions;\n            if (definitions) {\n                if (Array.isArray(definitions)) {\n                    for (var _e = 0, definitions_1 = definitions; _e < definitions_1.length; _e++) {\n                        var name_2 = definitions_1[_e];\n                        if (!index.pseudoElements[name_2]) {\n                            index.pseudoElements[name_2] = [];\n                        }\n                        if (!index.pseudoElements[name_2].includes(level)) {\n                            index.pseudoElements[name_2].push(level);\n                        }\n                    }\n                }\n                else {\n                    for (var _f = 0, _g = Object.values(definitions); _f < _g.length; _f++) {\n                        var names = _g[_f];\n                        for (var _h = 0, names_2 = names; _h < names_2.length; _h++) {\n                            var name_3 = names_2[_h];\n                            if (!index.pseudoElements[name_3]) {\n                                index.pseudoElements[name_3] = [];\n                            }\n                            if (!index.pseudoElements[name_3].includes(level)) {\n                                index.pseudoElements[name_3].push(level);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    // Add CSS Modules\n    for (var _j = 0, _k = Object.entries(cssModules); _j < _k.length; _j++) {\n        var _l = _k[_j], moduleName = _l[0], moduleSyntax = _l[1];\n        // Process pseudo-classes\n        if (moduleSyntax.pseudoClasses && typeof moduleSyntax.pseudoClasses === 'object') {\n            var definitions = moduleSyntax.pseudoClasses.definitions;\n            if (definitions) {\n                for (var _m = 0, _o = Object.values(definitions); _m < _o.length; _m++) {\n                    var names = _o[_m];\n                    for (var _p = 0, names_3 = names; _p < names_3.length; _p++) {\n                        var name_4 = names_3[_p];\n                        if (!index.pseudoClasses[name_4]) {\n                            index.pseudoClasses[name_4] = [];\n                        }\n                        if (!index.pseudoClasses[name_4].includes(moduleName)) {\n                            index.pseudoClasses[name_4].push(moduleName);\n                        }\n                    }\n                }\n            }\n        }\n        // Process pseudo-elements\n        if (moduleSyntax.pseudoElements && typeof moduleSyntax.pseudoElements === 'object') {\n            var definitions = moduleSyntax.pseudoElements.definitions;\n            if (definitions) {\n                if (Array.isArray(definitions)) {\n                    for (var _q = 0, definitions_2 = definitions; _q < definitions_2.length; _q++) {\n                        var name_5 = definitions_2[_q];\n                        if (!index.pseudoElements[name_5]) {\n                            index.pseudoElements[name_5] = [];\n                        }\n                        if (!index.pseudoElements[name_5].includes(moduleName)) {\n                            index.pseudoElements[name_5].push(moduleName);\n                        }\n                    }\n                }\n                else {\n                    for (var _r = 0, _s = Object.values(definitions); _r < _s.length; _r++) {\n                        var names = _s[_r];\n                        for (var _t = 0, names_4 = names; _t < names_4.length; _t++) {\n                            var name_6 = names_4[_t];\n                            if (!index.pseudoElements[name_6]) {\n                                index.pseudoElements[name_6] = [];\n                            }\n                            if (!index.pseudoElements[name_6].includes(moduleName)) {\n                                index.pseudoElements[name_6].push(moduleName);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return index;\n}\n// Pre-build the index for faster lookup\nvar pseudoLocationIndex = buildPseudoLocationIndex();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/css-selector-parser/dist/mjs/syntax-definitions.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/css-selector-parser/dist/mjs/utils.js":
/*!************************************************************!*\
  !*** ./node_modules/css-selector-parser/dist/mjs/utils.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   digitsChars: () => (/* binding */ digitsChars),\n/* harmony export */   escapeIdentifier: () => (/* binding */ escapeIdentifier),\n/* harmony export */   escapeString: () => (/* binding */ escapeString),\n/* harmony export */   identEscapeChars: () => (/* binding */ identEscapeChars),\n/* harmony export */   isHex: () => (/* binding */ isHex),\n/* harmony export */   isIdent: () => (/* binding */ isIdent),\n/* harmony export */   isIdentStart: () => (/* binding */ isIdentStart),\n/* harmony export */   maxHexLength: () => (/* binding */ maxHexLength),\n/* harmony export */   quoteChars: () => (/* binding */ quoteChars),\n/* harmony export */   stringRenderEscapeChars: () => (/* binding */ stringRenderEscapeChars),\n/* harmony export */   whitespaceChars: () => (/* binding */ whitespaceChars)\n/* harmony export */ });\nfunction isIdentStart(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || c === '-' || c === '_' || c === '\\\\' || c >= '\\u00a0';\n}\nfunction isIdent(c) {\n    return ((c >= 'a' && c <= 'z') ||\n        (c >= 'A' && c <= 'Z') ||\n        (c >= '0' && c <= '9') ||\n        c === '-' ||\n        c === '_' ||\n        c >= '\\u00a0');\n}\nfunction isHex(c) {\n    return (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F') || (c >= '0' && c <= '9');\n}\nvar identEscapeChars = {\n    '!': true,\n    '\"': true,\n    '#': true,\n    $: true,\n    '%': true,\n    '&': true,\n    \"'\": true,\n    '(': true,\n    ')': true,\n    '*': true,\n    '+': true,\n    ',': true,\n    '.': true,\n    '/': true,\n    ';': true,\n    '<': true,\n    '=': true,\n    '>': true,\n    '?': true,\n    '@': true,\n    '[': true,\n    '\\\\': true,\n    ']': true,\n    '^': true,\n    '`': true,\n    '{': true,\n    '|': true,\n    '}': true,\n    '~': true\n};\nvar stringRenderEscapeChars = {\n    '\\n': true,\n    '\\r': true,\n    '\\t': true,\n    '\\f': true,\n    '\\v': true\n};\nvar whitespaceChars = {\n    ' ': true,\n    '\\t': true,\n    '\\n': true,\n    '\\r': true,\n    '\\f': true\n};\nvar quoteChars = {\n    '\"': true,\n    \"'\": true\n};\nvar digitsChars = {\n    0: true,\n    1: true,\n    2: true,\n    3: true,\n    4: true,\n    5: true,\n    6: true,\n    7: true,\n    8: true,\n    9: true\n};\nvar maxHexLength = 6;\nfunction escapeIdentifier(s) {\n    var len = s.length;\n    var result = '';\n    var i = 0;\n    while (i < len) {\n        var chr = s.charAt(i);\n        if (identEscapeChars[chr] || (chr === '-' && i === 1 && s.charAt(0) === '-')) {\n            result += '\\\\' + chr;\n        }\n        else {\n            if (chr === '-' ||\n                chr === '_' ||\n                (chr >= 'A' && chr <= 'Z') ||\n                (chr >= 'a' && chr <= 'z') ||\n                (chr >= '0' && chr <= '9' && i !== 0 && !(i === 1 && s.charAt(0) === '-'))) {\n                result += chr;\n            }\n            else {\n                var charCode = chr.charCodeAt(0);\n                if ((charCode & 0xf800) === 0xd800) {\n                    var extraCharCode = s.charCodeAt(i++);\n                    if ((charCode & 0xfc00) !== 0xd800 || (extraCharCode & 0xfc00) !== 0xdc00) {\n                        throw Error('UCS-2(decode): illegal sequence');\n                    }\n                    charCode = ((charCode & 0x3ff) << 10) + (extraCharCode & 0x3ff) + 0x10000;\n                }\n                result += '\\\\' + charCode.toString(16) + ' ';\n            }\n        }\n        i++;\n    }\n    return result.trim();\n}\nfunction escapeString(s) {\n    var len = s.length;\n    var result = '';\n    var i = 0;\n    while (i < len) {\n        var chr = s.charAt(i);\n        if (chr === '\"') {\n            chr = '\\\\\"';\n        }\n        else if (chr === '\\\\') {\n            chr = '\\\\\\\\';\n        }\n        else if (stringRenderEscapeChars[chr]) {\n            chr = '\\\\' + chr.charCodeAt(0).toString(16) + (i === len - 1 ? '' : ' ');\n        }\n        result += chr;\n        i++;\n    }\n    return \"\\\"\".concat(result, \"\\\"\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY3NzLXNlbGVjdG9yLXBhcnNlci9kaXN0L21qcy91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ0E7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxBQ0VSXFxEZXNrdG9wXFxUYWxlbnQgVHJhY2tlclxcbm9kZV9tb2R1bGVzXFxjc3Mtc2VsZWN0b3ItcGFyc2VyXFxkaXN0XFxtanNcXHV0aWxzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBpc0lkZW50U3RhcnQoYykge1xuICAgIHJldHVybiAoYyA+PSAnYScgJiYgYyA8PSAneicpIHx8IChjID49ICdBJyAmJiBjIDw9ICdaJykgfHwgYyA9PT0gJy0nIHx8IGMgPT09ICdfJyB8fCBjID09PSAnXFxcXCcgfHwgYyA+PSAnXFx1MDBhMCc7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNJZGVudChjKSB7XG4gICAgcmV0dXJuICgoYyA+PSAnYScgJiYgYyA8PSAneicpIHx8XG4gICAgICAgIChjID49ICdBJyAmJiBjIDw9ICdaJykgfHxcbiAgICAgICAgKGMgPj0gJzAnICYmIGMgPD0gJzknKSB8fFxuICAgICAgICBjID09PSAnLScgfHxcbiAgICAgICAgYyA9PT0gJ18nIHx8XG4gICAgICAgIGMgPj0gJ1xcdTAwYTAnKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0hleChjKSB7XG4gICAgcmV0dXJuIChjID49ICdhJyAmJiBjIDw9ICdmJykgfHwgKGMgPj0gJ0EnICYmIGMgPD0gJ0YnKSB8fCAoYyA+PSAnMCcgJiYgYyA8PSAnOScpO1xufVxuZXhwb3J0IHZhciBpZGVudEVzY2FwZUNoYXJzID0ge1xuICAgICchJzogdHJ1ZSxcbiAgICAnXCInOiB0cnVlLFxuICAgICcjJzogdHJ1ZSxcbiAgICAkOiB0cnVlLFxuICAgICclJzogdHJ1ZSxcbiAgICAnJic6IHRydWUsXG4gICAgXCInXCI6IHRydWUsXG4gICAgJygnOiB0cnVlLFxuICAgICcpJzogdHJ1ZSxcbiAgICAnKic6IHRydWUsXG4gICAgJysnOiB0cnVlLFxuICAgICcsJzogdHJ1ZSxcbiAgICAnLic6IHRydWUsXG4gICAgJy8nOiB0cnVlLFxuICAgICc7JzogdHJ1ZSxcbiAgICAnPCc6IHRydWUsXG4gICAgJz0nOiB0cnVlLFxuICAgICc+JzogdHJ1ZSxcbiAgICAnPyc6IHRydWUsXG4gICAgJ0AnOiB0cnVlLFxuICAgICdbJzogdHJ1ZSxcbiAgICAnXFxcXCc6IHRydWUsXG4gICAgJ10nOiB0cnVlLFxuICAgICdeJzogdHJ1ZSxcbiAgICAnYCc6IHRydWUsXG4gICAgJ3snOiB0cnVlLFxuICAgICd8JzogdHJ1ZSxcbiAgICAnfSc6IHRydWUsXG4gICAgJ34nOiB0cnVlXG59O1xuZXhwb3J0IHZhciBzdHJpbmdSZW5kZXJFc2NhcGVDaGFycyA9IHtcbiAgICAnXFxuJzogdHJ1ZSxcbiAgICAnXFxyJzogdHJ1ZSxcbiAgICAnXFx0JzogdHJ1ZSxcbiAgICAnXFxmJzogdHJ1ZSxcbiAgICAnXFx2JzogdHJ1ZVxufTtcbmV4cG9ydCB2YXIgd2hpdGVzcGFjZUNoYXJzID0ge1xuICAgICcgJzogdHJ1ZSxcbiAgICAnXFx0JzogdHJ1ZSxcbiAgICAnXFxuJzogdHJ1ZSxcbiAgICAnXFxyJzogdHJ1ZSxcbiAgICAnXFxmJzogdHJ1ZVxufTtcbmV4cG9ydCB2YXIgcXVvdGVDaGFycyA9IHtcbiAgICAnXCInOiB0cnVlLFxuICAgIFwiJ1wiOiB0cnVlXG59O1xuZXhwb3J0IHZhciBkaWdpdHNDaGFycyA9IHtcbiAgICAwOiB0cnVlLFxuICAgIDE6IHRydWUsXG4gICAgMjogdHJ1ZSxcbiAgICAzOiB0cnVlLFxuICAgIDQ6IHRydWUsXG4gICAgNTogdHJ1ZSxcbiAgICA2OiB0cnVlLFxuICAgIDc6IHRydWUsXG4gICAgODogdHJ1ZSxcbiAgICA5OiB0cnVlXG59O1xuZXhwb3J0IHZhciBtYXhIZXhMZW5ndGggPSA2O1xuZXhwb3J0IGZ1bmN0aW9uIGVzY2FwZUlkZW50aWZpZXIocykge1xuICAgIHZhciBsZW4gPSBzLmxlbmd0aDtcbiAgICB2YXIgcmVzdWx0ID0gJyc7XG4gICAgdmFyIGkgPSAwO1xuICAgIHdoaWxlIChpIDwgbGVuKSB7XG4gICAgICAgIHZhciBjaHIgPSBzLmNoYXJBdChpKTtcbiAgICAgICAgaWYgKGlkZW50RXNjYXBlQ2hhcnNbY2hyXSB8fCAoY2hyID09PSAnLScgJiYgaSA9PT0gMSAmJiBzLmNoYXJBdCgwKSA9PT0gJy0nKSkge1xuICAgICAgICAgICAgcmVzdWx0ICs9ICdcXFxcJyArIGNocjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGlmIChjaHIgPT09ICctJyB8fFxuICAgICAgICAgICAgICAgIGNociA9PT0gJ18nIHx8XG4gICAgICAgICAgICAgICAgKGNociA+PSAnQScgJiYgY2hyIDw9ICdaJykgfHxcbiAgICAgICAgICAgICAgICAoY2hyID49ICdhJyAmJiBjaHIgPD0gJ3onKSB8fFxuICAgICAgICAgICAgICAgIChjaHIgPj0gJzAnICYmIGNociA8PSAnOScgJiYgaSAhPT0gMCAmJiAhKGkgPT09IDEgJiYgcy5jaGFyQXQoMCkgPT09ICctJykpKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0ICs9IGNocjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHZhciBjaGFyQ29kZSA9IGNoci5jaGFyQ29kZUF0KDApO1xuICAgICAgICAgICAgICAgIGlmICgoY2hhckNvZGUgJiAweGY4MDApID09PSAweGQ4MDApIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGV4dHJhQ2hhckNvZGUgPSBzLmNoYXJDb2RlQXQoaSsrKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKChjaGFyQ29kZSAmIDB4ZmMwMCkgIT09IDB4ZDgwMCB8fCAoZXh0cmFDaGFyQ29kZSAmIDB4ZmMwMCkgIT09IDB4ZGMwMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgRXJyb3IoJ1VDUy0yKGRlY29kZSk6IGlsbGVnYWwgc2VxdWVuY2UnKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjaGFyQ29kZSA9ICgoY2hhckNvZGUgJiAweDNmZikgPDwgMTApICsgKGV4dHJhQ2hhckNvZGUgJiAweDNmZikgKyAweDEwMDAwO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXN1bHQgKz0gJ1xcXFwnICsgY2hhckNvZGUudG9TdHJpbmcoMTYpICsgJyAnO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGkrKztcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdC50cmltKCk7XG59XG5leHBvcnQgZnVuY3Rpb24gZXNjYXBlU3RyaW5nKHMpIHtcbiAgICB2YXIgbGVuID0gcy5sZW5ndGg7XG4gICAgdmFyIHJlc3VsdCA9ICcnO1xuICAgIHZhciBpID0gMDtcbiAgICB3aGlsZSAoaSA8IGxlbikge1xuICAgICAgICB2YXIgY2hyID0gcy5jaGFyQXQoaSk7XG4gICAgICAgIGlmIChjaHIgPT09ICdcIicpIHtcbiAgICAgICAgICAgIGNociA9ICdcXFxcXCInO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGNociA9PT0gJ1xcXFwnKSB7XG4gICAgICAgICAgICBjaHIgPSAnXFxcXFxcXFwnO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHN0cmluZ1JlbmRlckVzY2FwZUNoYXJzW2Nocl0pIHtcbiAgICAgICAgICAgIGNociA9ICdcXFxcJyArIGNoci5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KSArIChpID09PSBsZW4gLSAxID8gJycgOiAnICcpO1xuICAgICAgICB9XG4gICAgICAgIHJlc3VsdCArPSBjaHI7XG4gICAgICAgIGkrKztcbiAgICB9XG4gICAgcmV0dXJuIFwiXFxcIlwiLmNvbmNhdChyZXN1bHQsIFwiXFxcIlwiKTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/css-selector-parser/dist/mjs/utils.js\n");

/***/ })

};
;